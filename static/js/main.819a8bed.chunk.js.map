{"version":3,"sources":["Pokemon.js","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","pokeID","useState","isLoading","setLoading","pokemon","setPokemon","pokemonType","setPokemonType","pokemonStats","setPokemonStats","useEffect","axios","get","then","response","data","types","stats","className","style","fontSize","name","id","Math","round","height","weight","map","pTy","type","background","color","alt","src","sprites","front_default","pStats","stat","ProgressBar","striped","variant","now","base_stat","min","max","label","App","pokemons","setPokemons","setPokeID","React","setShow","listOfPokemons","localStorage","getItem","JSON","parse","setItem","stringify","pokemonsList","notify","message","toast","Fragment","Container","fluid","Navbar","fixed","Row","Col","InputGroup","FormControl","value","onChange","event","target","placeholder","Button","onClick","isNaN","parseInt","console","log","undefined","find","o","push","Table","bordered","responsive","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA4EeA,EAxEC,SAAC,GAChB,IADiBC,EAClB,EADkBA,OAEjB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsCJ,qBAAtC,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAwCN,qBAAxC,mBAAOO,EAAP,KAAqBC,EAArB,KAaD,OAXAC,qBAAU,WAERC,IAAMC,IAAI,qCAAuCZ,GAAQa,MAAK,SAAAC,GAE5DT,EAAWS,EAASC,MACpBR,EAAeO,EAASC,KAAKC,OAC7BP,EAAgBK,EAASC,KAAKE,OAC9Bd,GAAW,QAEb,IAEED,EACK,6BAAI,6BAAI,sBAA4BgB,UAAU,MAAtC,uBAAW,qBAI1B,+BACE,mCAAwB,uBAAkCC,MAAO,CAACC,SAAS,IAAnD,UAAwD,4BAAIhB,EAAQiB,OAApE,IACpBjB,EAAQkB,GADY,MAAW,QAAUlB,EAAQiB,MAGrD,uBACA,4CAAgDE,KAAKC,MAAqB,IAAfpB,EAAQqB,OAAY,KAAK,IAApF,QAAY,YAAcrB,EAAQiB,MAClC,uBACA,4CAAgDE,KAAKC,MAAqB,IAAfpB,EAAQsB,OAAY,KAAK,IAApF,SAAY,YAActB,EAAQiB,MAClC,uBACCf,EAAYqB,KAAI,SAAAC,GAAG,OAAI,iCACH,UAAhBA,EAAIC,KAAKR,MAAkB,yBAAQF,MAAO,CAACW,WAAW,OAAOC,MAAM,SAAxC,cAAoDH,EAAIC,KAAKR,QACxE,WAAhBO,EAAIC,KAAKR,MAAmB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,QAC1E,WAAhBO,EAAIC,KAAKR,MAAmB,yBAAQF,MAAO,CAACW,WAAW,WAAWC,MAAM,SAA5C,cAAwDH,EAAIC,KAAKR,QAC7E,QAAhBO,EAAIC,KAAKR,MAAgB,yBAAQF,MAAO,CAACW,WAAW,OAAOC,MAAM,SAAxC,cAAoDH,EAAIC,KAAKR,QACtE,UAAhBO,EAAIC,KAAKR,MAAkB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,QACzE,WAAhBO,EAAIC,KAAKR,MAAmB,yBAAQF,MAAO,CAACW,WAAW,SAASC,MAAM,SAA1C,cAAsDH,EAAIC,KAAKR,QAC3E,SAAhBO,EAAIC,KAAKR,MAAiB,yBAAQF,MAAO,CAACW,WAAW,MAAMC,MAAM,SAAvC,cAAmDH,EAAIC,KAAKR,QACtE,aAAhBO,EAAIC,KAAKR,MAAqB,yBAAQF,MAAO,CAACW,WAAW,UAAUC,MAAM,SAA3C,cAAuDH,EAAIC,KAAKR,QAC9E,YAAhBO,EAAIC,KAAKR,MAAoB,yBAAQF,MAAO,CAACW,WAAW,UAAUC,MAAM,SAA3C,cAAuDH,EAAIC,KAAKR,QAC7E,WAAhBO,EAAIC,KAAKR,MAAmB,yBAAQF,MAAO,CAACW,WAAW,UAAUC,MAAM,SAA3C,cAAuDH,EAAIC,KAAKR,QAC5E,UAAhBO,EAAIC,KAAKR,MAAkB,yBAAQF,MAAO,CAACW,WAAW,UAAUC,MAAM,SAA3C,cAAuDH,EAAIC,KAAKR,QAC3E,SAAhBO,EAAIC,KAAKR,MAAiB,yBAAQF,MAAO,CAACW,WAAW,UAAUC,MAAM,SAA3C,cAAuDH,EAAIC,KAAKR,QAC1E,SAAhBO,EAAIC,KAAKR,MAAiB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,QACxE,WAAhBO,EAAIC,KAAKR,MAAmB,yBAAQF,MAAO,CAACW,WAAW,OAAOC,MAAM,SAAxC,cAAoDH,EAAIC,KAAKR,QACzE,QAAhBO,EAAIC,KAAKR,MAAgB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,QACvE,UAAhBO,EAAIC,KAAKR,MAAkB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,QACzE,aAAhBO,EAAIC,KAAKR,MAAqB,yBAAQF,MAAO,CAACW,WAAW,SAASC,MAAM,SAA1C,cAAsDH,EAAIC,KAAKR,QAC7E,UAAhBO,EAAIC,KAAKR,MAAkB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,QACzE,WAAhBO,EAAIC,KAAKR,MAAmB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,QAC1E,YAAhBO,EAAIC,KAAKR,MAAoB,yBAAQF,MAAO,CAACW,WAAW,QAAQC,MAAM,SAAzC,cAAqDH,EAAIC,KAAKR,UApB7D,SAAUjB,EAAQiB,KAAO,IAAMO,EAAIC,KAAKR,WARlEjB,EAAQiB,MA+BjB,6BAAK,qBAAKW,IAAK5B,EAAQiB,KAAMY,IAAK7B,EAAQ8B,QAAQC,kBAGlD,+BACG3B,EAAamB,KAAI,SAAAS,GAAM,OAAI,iCAA+E,OAAnBA,EAAOC,KAAKhB,MAAe,cAACiB,EAAA,EAAD,CAAaC,SAAO,EAACC,QAAQ,UAAUC,IAAKL,EAAOM,UAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOT,EAAOC,KAAKhB,KAAO,IAAMe,EAAOM,YAA9M,MAAW,SAAWtC,EAAQiB,KAAM,IAAKe,EAAOC,KAAKhB,SAChFb,EAAamB,KAAI,SAAAS,GAAM,OAAI,iCAA+E,WAAnBA,EAAOC,KAAKhB,MAAmB,cAACiB,EAAA,EAAD,CAAaC,SAAO,EAACC,QAAQ,SAASC,IAAKL,EAAOM,UAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOT,EAAOC,KAAKhB,KAAO,IAAMe,EAAOM,YAAjN,MAAW,SAAWtC,EAAQiB,KAAM,IAAKe,EAAOC,KAAKhB,SAChFb,EAAamB,KAAI,SAAAS,GAAM,OAAI,iCAA+E,YAAnBA,EAAOC,KAAKhB,MAAoB,cAACiB,EAAA,EAAD,CAAaC,SAAO,EAACC,QAAQ,UAAUC,IAAKL,EAAOM,UAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOT,EAAOC,KAAKhB,KAAO,IAAMe,EAAOM,YAAnN,MAAW,SAAWtC,EAAQiB,KAAM,IAAKe,EAAOC,KAAKhB,SAChFb,EAAamB,KAAI,SAAAS,GAAM,OAAI,iCAA+E,mBAAnBA,EAAOC,KAAKhB,MAA2B,cAACiB,EAAA,EAAD,CAAaC,SAAO,EAACC,QAAQ,OAAOC,IAAKL,EAAOM,UAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOT,EAAOC,KAAKhB,KAAO,IAAKe,EAAOM,YAAtN,MAAW,SAAWtC,EAAQiB,KAAM,IAAKe,EAAOC,KAAKhB,SAChFb,EAAamB,KAAI,SAAAS,GAAM,OAAI,iCAA+E,oBAAnBA,EAAOC,KAAKhB,MAA4B,cAACiB,EAAA,EAAD,CAAaC,SAAO,EAACC,QAAQ,UAAUC,IAAKL,EAAOM,UAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOT,EAAOC,KAAKhB,KAAO,IAAKe,EAAOM,YAA1N,MAAW,SAAWtC,EAAQiB,KAAM,IAAKe,EAAOC,KAAKhB,SAChFb,EAAamB,KAAI,SAAAS,GAAM,OAAI,iCAA+E,UAAnBA,EAAOC,KAAKhB,MAAkB,cAACiB,EAAA,EAAD,CAAaC,SAAO,EAACC,QAAQ,SAASC,IAAKL,EAAOM,UAAWC,IAAI,IAAIC,IAAI,MAAMC,MAAOT,EAAOC,KAAKhB,KAAO,IAAKe,EAAOM,YAA/M,MAAW,SAAWtC,EAAQiB,KAAM,IAAKe,EAAOC,KAAKhB,cAzC5ErB,I,8ECgHI8C,MA1Hf,WACE,MAAgC7C,mBAAS,CACvC,CAAEqB,GAAI,GACN,CAAEA,GAAI,GACN,CAAEA,GAAI,IACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,IACN,CAAEA,GAAI,IACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,IACN,CAAEA,GAAI,IACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,KACN,CAAEA,GAAI,OA5BR,mBAAOyB,EAAP,KAAiBC,EAAjB,KA+BA,EAA4B/C,mBAAS,IAArC,mBAAOD,EAAP,KAAeiD,EAAf,KACA,EAAwBC,IAAMjD,UAAS,GAAvC,mBAAakD,GAAb,WAEAzC,qBAAU,WACR,IAAI0C,EAAiBC,aAAaC,QAAQ,cAGrCF,GAGHA,EAAiBG,KAAKC,MAAMH,aAAaC,QAAQ,eACjDN,EAAYI,IAHZC,aAAaI,QAAQ,aAAcF,KAAKG,UAAUX,MAKnD,IAEH,IAAMY,EAAeZ,EAASpB,KAAI,gBAAGL,EAAH,EAAGA,GAAH,OAAY,cAAC,EAAD,CAAStB,OAAQsB,OAMzDsC,EAAS,SAACC,GAAD,OAAaC,YAAMD,IAiClC,OACE,eAAC,IAAME,SAAP,WACE,cAAC,IAAD,IACA,sBAAmB7C,UAAU,MAA7B,UACE,cAAC8C,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,CAAQC,MAAM,MAAd,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAEEjD,GAAG,mBACHkD,MAAOxE,EACPyE,SAlDG,SAACC,GACpBzB,EAAUyB,EAAMC,OAAOH,QAkDPI,YAAY,eAJR,mBAMN,cAACC,EAAA,EAAD,CAEErC,QAAQ,UACRsC,QAlDL,WACX,GAAe,IAAX9E,GAA2B,KAAXA,GAAkB+E,MAAM/E,GA0B1C4D,EAAO,uCA1B4C,CACnD,GAAIoB,SAAShF,GAAU,IAGrB,OAFAiF,QAAQC,IAAI,2BACZtB,EAAO,mCAIT,IAAIR,EAAiBG,KAAKC,MAAMH,aAAaC,QAAQ,oBAIzC6B,IAFF/B,EAAegC,MAAK,SAACC,GAAD,OAAOA,EAAE/D,KAAO0D,SAAShF,OAGrDoD,EAAekC,KAAK,CAAEhE,GAAI0D,SAAShF,KAEnCgD,EAAYI,GAEZC,aAAaI,QAAQ,aAAcF,KAAKG,UAAUN,IAClDH,EAAU,IAEVE,GAAQ,GACRS,EAAO,wBAEPT,GAAQ,GACRS,EAAO,8BAuBG,gBACM,gCAWhB,cAAC2B,EAAA,EAAD,CAAOhD,SAAO,EAACiD,UAAQ,EAACC,YAAU,EAAlC,SACE,gCAAQ9B,QA1BH,eC9FA+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/E,MAAK,YAAkD,IAA/CgF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.819a8bed.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst Pokemon = ({pokeID}) =>\n{\n const [isLoading, setLoading] = useState(true);\n const [pokemon, setPokemon] = useState();\n const [pokemonType, setPokemonType] = useState();\n const [pokemonStats, setPokemonStats] = useState();\n\nuseEffect(() => {\n  \n  axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + pokeID).then(response => {\n    //console.log(response.data.types);\n    setPokemon(response.data);\n    setPokemonType(response.data.types);\n    setPokemonStats(response.data.stats);\n    setLoading(false);\n  });\n},[]);\n\nif (isLoading) {\n  return <tr><td><span key={'span-loading-'} className=\"App\">Loading...</span></td></tr>;\n}\n\nreturn (\n  <tr key={pokeID}>\n    <td key={pokemon.name}> <span key={'span-' + pokemon.name}style={{fontSize:18}}><b>{pokemon.name}</b>\n      [{pokemon.id}]\n    </span>\n    <br></br>\n    <label key={'lblHeight' + pokemon.name}>Height:{Math.round(pokemon.height*0.33*100)/100} ' </label>\n    <br></br>\n    <label key={'lblWeight' + pokemon.name}>Weight:{Math.round(pokemon.weight*0.22*100)/100} lb </label>\n    <br></br>\n    {pokemonType.map(pTy =>(<span key={'span2-'+ pokemon.name + '-' + pTy.type.name } >\n        {pTy.type.name==='water' && <button style={{background:\"blue\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='ground' && <button style={{background:\"brown\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='dragon' && <button style={{background:\"darkblue\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='ice' && <button style={{background:\"aqua\",color:\"black\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='grass' && <button style={{background:\"green\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='poison' && <button style={{background:\"purple\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='fire' && <button style={{background:\"red\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='fighting' && <button style={{background:\"#8a1f17\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='psychic' && <button style={{background:\"#f366b9\",color:\"black\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='normal' && <button style={{background:\"#79858a\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='steel' && <button style={{background:\"#57a2c2\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='rock' && <button style={{background:\"#335234\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='dark' && <button style={{background:\"black\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='flying' && <button style={{background:\"blue\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='bug' && <button style={{background:\"black\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='ghost' && <button style={{background:\"black\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='electric' && <button style={{background:\"yellow\",color:\"black\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='fairy' && <button style={{background:\"black\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='shadow' && <button style={{background:\"black\",color:\"white\"}}> {pTy.type.name}</button>}\n        {pTy.type.name==='unknown' && <button style={{background:\"black\",color:\"white\"}}> {pTy.type.name}</button>}\n        </span>))}\n    </td>\n    <td ><img alt={pokemon.name} src={pokemon.sprites.front_default} />\n         \n    </td>\n    <td >\n      {pokemonStats.map(pStats =>(<span key={'span3-' + pokemon.name +'-'+ pStats.stat.name}>{pStats.stat.name==='hp' && <ProgressBar striped variant=\"success\" now={pStats.base_stat} min='0' max='255' label={pStats.stat.name + \" \" + pStats.base_stat}/> } </span>))}\n      {pokemonStats.map(pStats =>(<span key={'span3-' + pokemon.name +'-'+ pStats.stat.name}>{pStats.stat.name==='attack' && <ProgressBar striped variant=\"danger\" now={pStats.base_stat} min='0' max='255' label={pStats.stat.name + \" \" + pStats.base_stat}/> } </span>))}\n      {pokemonStats.map(pStats =>(<span key={'span3-' + pokemon.name +'-'+ pStats.stat.name}>{pStats.stat.name==='defense' && <ProgressBar striped variant=\"warning\" now={pStats.base_stat} min='0' max='255' label={pStats.stat.name + \" \" + pStats.base_stat}/> } </span>))}\n      {pokemonStats.map(pStats =>(<span key={'span3-' + pokemon.name +'-'+ pStats.stat.name}>{pStats.stat.name==='special-attack' && <ProgressBar striped variant=\"info\" now={pStats.base_stat} min='0' max='255' label={pStats.stat.name + \" \" +pStats.base_stat}/> } </span>))}\n      {pokemonStats.map(pStats =>(<span key={'span3-' + pokemon.name +'-'+ pStats.stat.name}>{pStats.stat.name==='special-defense' && <ProgressBar striped variant=\"success\" now={pStats.base_stat} min='0' max='255' label={pStats.stat.name + \" \" +pStats.base_stat}/> } </span>))}\n      {pokemonStats.map(pStats =>(<span key={'span3-' + pokemon.name +'-'+ pStats.stat.name}>{pStats.stat.name==='speed' && <ProgressBar striped variant=\"danger\" now={pStats.base_stat} min='0' max='255' label={pStats.stat.name + \" \" +pStats.base_stat}/> } </span>))}\n    </td>\n  </tr>\n);\n\n\n}\n\nexport default Pokemon;","import React, { useState, useEffect } from \"react\";\nimport Pokemon from \"./Pokemon\";\n//import AddPokemon from \"./AddPokemon\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Table,\n  InputGroup,\n  Container,\n  Row,\n  Col,\n  FormControl,\n  Button,\n  Navbar,\n} from \"react-bootstrap\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nfunction App() {\n  const [pokemons, setPokemons] = useState([\n    { id: 1 },\n    { id: 2 },\n    { id: 55 },\n    { id: 255 },\n    { id: 256 },\n    { id: 257 },\n    { id: 65 },\n    { id: 64 },\n    { id: 634 },\n    { id: 635 },\n    { id: 306 },\n    { id: 305 },\n    { id: 199 },\n    { id: 289 },\n    { id: 365 },\n    { id: 445 },\n    { id: 452 },\n    { id: 534 },\n    { id: 533 },\n    { id: 565 },\n    { id: 862 },\n    { id: 31 },\n    { id: 34 },\n    { id: 288 },\n    { id: 115 },\n    { id: 398 },\n    { id: 461 },\n    { id: 243 },\n  ]);\n\n  const [pokeID, setPokeID] = useState(\"\");\n  const [show, setShow] = React.useState(true);\n\n  useEffect(() => {\n    let listOfPokemons = localStorage.getItem(\"mypokemons\");\n    //Check the storage and get the pokemon list and\n    //load the ui\n    if (!listOfPokemons) {\n      localStorage.setItem(\"mypokemons\", JSON.stringify(pokemons));\n    } else {\n      listOfPokemons = JSON.parse(localStorage.getItem(\"mypokemons\"));\n      setPokemons(listOfPokemons);\n    }\n  }, []);\n\n  const pokemonsList = pokemons.map(({ id }) => <Pokemon pokeID={id} />);\n\n  const handleChange = (event) => {\n    setPokeID(event.target.value);\n  };\n\n  const notify = (message) => toast(message);\n\n  const AddP = () => {\n    if (pokeID !== 0 && pokeID !== \"\" && !isNaN(pokeID)) {\n      if (parseInt(pokeID) > 898) {\n        console.log(\"Invalid pokemon id\");\n        notify(\"Cannot add Pokemon to the list.\");\n        return;\n      }\n\n      let listOfPokemons = JSON.parse(localStorage.getItem(\"mypokemons\"));\n\n      let obj = listOfPokemons.find((o) => o.id === parseInt(pokeID));\n\n      if (obj === undefined) {\n        listOfPokemons.push({ id: parseInt(pokeID) });\n\n        setPokemons(listOfPokemons);\n\n        localStorage.setItem(\"mypokemons\", JSON.stringify(listOfPokemons));\n        setPokeID(\"\");\n\n        setShow(true);\n        notify(\"Pokemon was added.\");\n      } else {\n        setShow(true);\n        notify(\"Pokemon is in the list.\");\n      }\n    } else {\n      notify(\"Cannot add Pokemon to the list.\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ToastContainer />\n      <div key=\"divMain\" className=\"App\">\n        <Container fluid>\n          <Navbar fixed=\"top\">\n            <Row>\n              <Col>\n                <InputGroup>\n                  <FormControl\n                    key=\"kAddPokemonText\"\n                    id=\"idAddPokemonText\"\n                    value={pokeID}\n                    onChange={handleChange}\n                    placeholder=\"Add Pokemon\"\n                  />\n                  <Button\n                    key=\"kAddPokemonButton\"\n                    variant=\"primary\"\n                    onClick={AddP}\n                  >\n                    Add\n                  </Button>\n                </InputGroup>\n              </Col>\n            </Row>\n          </Navbar>\n        </Container>\n        <Table striped bordered responsive>\n          <tbody>{pokemonsList}</tbody>\n        </Table>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}